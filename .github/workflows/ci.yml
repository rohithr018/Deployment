name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    name: Frontend (Installing Dependencies + Testing)
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test

  backend:
    runs-on: ubuntu-latest
    name: Backend (Installing Dependencies + Testing)
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      - name: Run Backend Tests
        run: |
          cd backend
          npm test

  security-check:
    runs-on: ubuntu-latest
    name: Security Scan (Trivy + Gitleaks)
    needs: [frontend, backend]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: Run Trivy FS Scan
        run: trivy fs --format table -o fs-report.json .

      - name: Install Gitleaks
        run: sudo apt install gitleaks -y

      - name: Run Gitleaks Code Scan
        run: gitleaks detect --source . --report-path=gitleaks-report.json --report-format=json

  qodana:
    runs-on: ubuntu-latest
    name: Qodana Scan (Code Quality)
    needs: [frontend, backend, security-check]
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2024.3
        with:
          pr-mode: true
          args: --apply-fixes
          push-fixes: pull-request
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_PATH }}
